import org.jetbrains.kotlin.gradle.tasks.AbstractKotlinCompile

plugins {
    id 'com.android.application'
    id 'com.mikepenz.aboutlibraries.plugin'
    id 'kotlin-android'
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlin_version"
    id 'org.jmailen.kotlinter' version '3.3.0'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.livetl.android"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 100
        versionName "6.0.0-beta01"
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    buildTypes {
        debug {
            applicationIdSuffix '.dev'
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions 'variant'
    productFlavors {
        playstore {
            dimension 'variant'
        }
        fdroid {
            dimension 'variant'
            applicationIdSuffix '.fdroid'
        }
    }

    buildFeatures {
        compose true
        viewBinding true

        // Disable unused AGP features
        aidl false
        renderScript false
        resValues false
        shaders false
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }

    lintOptions {
        disable "MissingTranslation"
        abortOnError false
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
            testLogging {
                events "passed", "skipped", "failed"
            }
        }
    }
}

repositories {
    // com.pierfrancescosoffritti.androidyoutubeplayer is still on JCenter
    // Pending https://github.com/PierfrancescoSoffritti/android-youtube-player/issues/703
    jcenter()
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.3'

    // DI
    final koin_version = '3.0.1'
    implementation "io.insert-koin:koin-android:$koin_version"
    implementation "io.insert-koin:koin-androidx-compose:$koin_version"

    // Logging
    implementation 'com.jakewharton.timber:timber:4.7.1'

    implementation 'androidx.activity:activity-ktx:1.3.0-alpha07'
    implementation 'androidx.core:core-ktx:1.6.0-alpha03'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'

    // Jetpack Compose
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.ui:ui-viewbinding:$compose_version"
    implementation "androidx.compose.ui:ui-util:$compose_version"
    implementation 'androidx.navigation:navigation-compose:1.0.0-alpha10'

    // Video player
    implementation 'com.pierfrancescosoffritti.androidyoutubeplayer:core:10.0.5'

    implementation 'com.github.arkon:android-youtubeExtractor:9ad6b06'

    // Networking
    final ktor_version = '1.5.1'
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-android:$ktor_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.1.0'

    final accompanist_version = '0.9.1'

    // Image loading
    implementation 'io.coil-kt:coil:1.2.1'
    implementation "com.google.accompanist:accompanist-coil:$accompanist_version"

    implementation "com.google.accompanist:accompanist-pager:$accompanist_version"
    implementation "com.google.accompanist:accompanist-pager-indicators:$accompanist_version"
    implementation "com.google.accompanist:accompanist-swiperefresh:$accompanist_version"

    // Preferences
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'com.github.tfcporciuncula.flow-preferences:flow-preferences:1.3.4'

    // OSS licenses
    implementation "com.mikepenz:aboutlibraries-core:$about_libs_version"

    testImplementation "org.junit.jupiter:junit-jupiter:5.7.2"

    final mockito_version = '3.10.0'
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.mockito.kotlin:mockito-kotlin:3.2.0"
}

kotlinter {
    experimentalRules = true
}
preBuild.dependsOn(formatKotlin)

tasks.withType(AbstractKotlinCompile).all {
    kotlinOptions.freeCompilerArgs += [
            "-Xopt-in=kotlin.Experimental",
            "-Xopt-in=kotlin.RequiresOptIn",
            "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
            "-Xuse-experimental=androidx.compose.foundation.ExperimentalFoundationApi",
    ]
}
